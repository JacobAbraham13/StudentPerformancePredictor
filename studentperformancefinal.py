# -*- coding: utf-8 -*-
"""StudentPerformanceFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mFH6XWQ1chNIq0tQTsaLfplMbWbRuVIz
"""

import pandas as pd
df = pd.read_csv("sample_data/StudentsPerformance.csv", index_col = 0)
df = df.reset_index(drop=False)
df

df = df.dropna(axis=0)
df.rename(columns = {'math score': 'math', 'reading score': 'reading', 'writing score': 'writing',
                     'race/ethnicity' : 'race', 'parental level of education' : 'parent_education',
                     'test preparation course' : 'test_prep_course'}, inplace = True)
df.columns

def gender_to_numeric(x):
  if x=='female': return 2
  if x=='male': return 1
df['gender'] = df['gender'].apply(gender_to_numeric)

def race_to_numeric(x):
  if x=='group A': return 1
  if x=='group B': return 2
  if x=='group C': return 3
  if x=='group D': return 4
  if x=='group E': return 5
  if x=='group F': return 6
df['race'] = df['race'].apply(race_to_numeric)
df

def test_prep_course_to_numeric(x):
  if x=='none': return 1
  if x=='completed': return 2
df['test_prep_course'] = df['test_prep_course'].apply(test_prep_course_to_numeric)
df

y = df.math
model_features = ['gender', 'race', 'test_prep_course']
X = df[model_features]
X.head()

from sklearn.tree import DecisionTreeRegressor


model = DecisionTreeRegressor(random_state = 1)
model.fit(X, y)

print("Making predictions for the following 5 people:")
print(X.head())
print("The predictions are")
print(model.predict(X.head()))

from sklearn.metrics import mean_absolute_error

predicted = model.predict(X)
mean_absolute_error(y, predicted)

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)
new_model = RandomForestRegressor(random_state = 1)
new_model.fit(train_X, train_y)
val_predictions = new_model.predict(val_X)
print(mean_absolute_error(val_y, val_predictions))

print("Making predictions for the following 5 people:")
print(X.head())
print("The predictions are")
print(new_model.predict(X.head()))

df